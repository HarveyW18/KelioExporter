//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KelioExporter.ClockingServiceClient1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClockingServiceSoapBinding", Namespace="http://echange.service.open.bodet.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Object))]
    public partial class ClockingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback deletePhysicalClockingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportCalculatedClockingsOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback importClockingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportClockingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportClockingsByDateForEmployeeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportClockingsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback importPhysicalClockingsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClockingService() {
            this.Url = global::KelioExporter.Properties.Settings.Default.KelioExporter_ClockingServiceClient1_ClockingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event deletePhysicalClockingsCompletedEventHandler deletePhysicalClockingsCompleted;
        
        /// <remarks/>
        public event exportCalculatedClockingsOnlyCompletedEventHandler exportCalculatedClockingsOnlyCompleted;
        
        /// <remarks/>
        public event importClockingsCompletedEventHandler importClockingsCompleted;
        
        /// <remarks/>
        public event exportClockingsCompletedEventHandler exportClockingsCompleted;
        
        /// <remarks/>
        public event exportClockingsByDateForEmployeeListCompletedEventHandler exportClockingsByDateForEmployeeListCompleted;
        
        /// <remarks/>
        public event exportClockingsByDateCompletedEventHandler exportClockingsByDateCompleted;
        
        /// <remarks/>
        public event importPhysicalClockingsCompletedEventHandler importPhysicalClockingsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deletePhysicalClockings", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("clockingsInError")]
        public Clocking[] deletePhysicalClockings(Clocking[] clockingsToDelete) {
            object[] results = this.Invoke("deletePhysicalClockings", new object[] {
                        clockingsToDelete});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void deletePhysicalClockingsAsync(Clocking[] clockingsToDelete) {
            this.deletePhysicalClockingsAsync(clockingsToDelete, null);
        }
        
        /// <remarks/>
        public void deletePhysicalClockingsAsync(Clocking[] clockingsToDelete, object userState) {
            if ((this.deletePhysicalClockingsOperationCompleted == null)) {
                this.deletePhysicalClockingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePhysicalClockingsOperationCompleted);
            }
            this.InvokeAsync("deletePhysicalClockings", new object[] {
                        clockingsToDelete}, this.deletePhysicalClockingsOperationCompleted, userState);
        }
        
        private void OndeletePhysicalClockingsOperationCompleted(object arg) {
            if ((this.deletePhysicalClockingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePhysicalClockingsCompleted(this, new deletePhysicalClockingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:exportCalculatedClockingsOnly", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("exportedClockings")]
        public Clocking[] exportCalculatedClockingsOnly(AskedPopulationWithPeriod[] employeeList) {
            object[] results = this.Invoke("exportCalculatedClockingsOnly", new object[] {
                        employeeList});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void exportCalculatedClockingsOnlyAsync(AskedPopulationWithPeriod[] employeeList) {
            this.exportCalculatedClockingsOnlyAsync(employeeList, null);
        }
        
        /// <remarks/>
        public void exportCalculatedClockingsOnlyAsync(AskedPopulationWithPeriod[] employeeList, object userState) {
            if ((this.exportCalculatedClockingsOnlyOperationCompleted == null)) {
                this.exportCalculatedClockingsOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportCalculatedClockingsOnlyOperationCompleted);
            }
            this.InvokeAsync("exportCalculatedClockingsOnly", new object[] {
                        employeeList}, this.exportCalculatedClockingsOnlyOperationCompleted, userState);
        }
        
        private void OnexportCalculatedClockingsOnlyOperationCompleted(object arg) {
            if ((this.exportCalculatedClockingsOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportCalculatedClockingsOnlyCompleted(this, new exportCalculatedClockingsOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:importClockings", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("clockingsInError")]
        public Clocking[] importClockings(Clocking[] clockingsToImport) {
            object[] results = this.Invoke("importClockings", new object[] {
                        clockingsToImport});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void importClockingsAsync(Clocking[] clockingsToImport) {
            this.importClockingsAsync(clockingsToImport, null);
        }
        
        /// <remarks/>
        public void importClockingsAsync(Clocking[] clockingsToImport, object userState) {
            if ((this.importClockingsOperationCompleted == null)) {
                this.importClockingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportClockingsOperationCompleted);
            }
            this.InvokeAsync("importClockings", new object[] {
                        clockingsToImport}, this.importClockingsOperationCompleted, userState);
        }
        
        private void OnimportClockingsOperationCompleted(object arg) {
            if ((this.importClockingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importClockingsCompleted(this, new importClockingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:exportClockings", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("exportedClockings")]
        public Clocking[] exportClockings(AskedPopulationWithPeriod[] employeeList) {
            object[] results = this.Invoke("exportClockings", new object[] {
                        employeeList});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void exportClockingsAsync(AskedPopulationWithPeriod[] employeeList) {
            this.exportClockingsAsync(employeeList, null);
        }
        
        /// <remarks/>
        public void exportClockingsAsync(AskedPopulationWithPeriod[] employeeList, object userState) {
            if ((this.exportClockingsOperationCompleted == null)) {
                this.exportClockingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportClockingsOperationCompleted);
            }
            this.InvokeAsync("exportClockings", new object[] {
                        employeeList}, this.exportClockingsOperationCompleted, userState);
        }
        
        private void OnexportClockingsOperationCompleted(object arg) {
            if ((this.exportClockingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportClockingsCompleted(this, new exportClockingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:exportClockingsByDateForEmployeeList", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("exportedClockings")]
        public Clocking[] exportClockingsByDateForEmployeeList(askedEmployee[] employeeList) {
            object[] results = this.Invoke("exportClockingsByDateForEmployeeList", new object[] {
                        employeeList});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void exportClockingsByDateForEmployeeListAsync(askedEmployee[] employeeList) {
            this.exportClockingsByDateForEmployeeListAsync(employeeList, null);
        }
        
        /// <remarks/>
        public void exportClockingsByDateForEmployeeListAsync(askedEmployee[] employeeList, object userState) {
            if ((this.exportClockingsByDateForEmployeeListOperationCompleted == null)) {
                this.exportClockingsByDateForEmployeeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportClockingsByDateForEmployeeListOperationCompleted);
            }
            this.InvokeAsync("exportClockingsByDateForEmployeeList", new object[] {
                        employeeList}, this.exportClockingsByDateForEmployeeListOperationCompleted, userState);
        }
        
        private void OnexportClockingsByDateForEmployeeListOperationCompleted(object arg) {
            if ((this.exportClockingsByDateForEmployeeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportClockingsByDateForEmployeeListCompleted(this, new exportClockingsByDateForEmployeeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:exportClockingsByDate", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("exportedClockings")]
        public Clocking[] exportClockingsByDate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string populationFilter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupFilter, [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endDateSpecified) {
            object[] results = this.Invoke("exportClockingsByDate", new object[] {
                        populationFilter,
                        groupFilter,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void exportClockingsByDateAsync(string populationFilter, string groupFilter, System.Nullable<System.DateTime> startDate, bool startDateSpecified, System.Nullable<System.DateTime> endDate, bool endDateSpecified) {
            this.exportClockingsByDateAsync(populationFilter, groupFilter, startDate, startDateSpecified, endDate, endDateSpecified, null);
        }
        
        /// <remarks/>
        public void exportClockingsByDateAsync(string populationFilter, string groupFilter, System.Nullable<System.DateTime> startDate, bool startDateSpecified, System.Nullable<System.DateTime> endDate, bool endDateSpecified, object userState) {
            if ((this.exportClockingsByDateOperationCompleted == null)) {
                this.exportClockingsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportClockingsByDateOperationCompleted);
            }
            this.InvokeAsync("exportClockingsByDate", new object[] {
                        populationFilter,
                        groupFilter,
                        startDate,
                        startDateSpecified,
                        endDate,
                        endDateSpecified}, this.exportClockingsByDateOperationCompleted, userState);
        }
        
        private void OnexportClockingsByDateOperationCompleted(object arg) {
            if ((this.exportClockingsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportClockingsByDateCompleted(this, new exportClockingsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:importPhysicalClockings", RequestNamespace="http://echange.service.open.bodet.com", ResponseNamespace="http://echange.service.open.bodet.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("clockingsInError")]
        public Clocking[] importPhysicalClockings(Clocking[] clockingsToImport) {
            object[] results = this.Invoke("importPhysicalClockings", new object[] {
                        clockingsToImport});
            return ((Clocking[])(results[0]));
        }
        
        /// <remarks/>
        public void importPhysicalClockingsAsync(Clocking[] clockingsToImport) {
            this.importPhysicalClockingsAsync(clockingsToImport, null);
        }
        
        /// <remarks/>
        public void importPhysicalClockingsAsync(Clocking[] clockingsToImport, object userState) {
            if ((this.importPhysicalClockingsOperationCompleted == null)) {
                this.importPhysicalClockingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportPhysicalClockingsOperationCompleted);
            }
            this.InvokeAsync("importPhysicalClockings", new object[] {
                        clockingsToImport}, this.importPhysicalClockingsOperationCompleted, userState);
        }
        
        private void OnimportPhysicalClockingsOperationCompleted(object arg) {
            if ((this.importPhysicalClockingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importPhysicalClockingsCompleted(this, new importPhysicalClockingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://echange.service.open.bodet.com")]
    public partial class Clocking : EmployeeInformation {
        
        private System.Nullable<System.DateTime> dateField;
        
        private bool dateFieldSpecified;
        
        private System.Nullable<int> geolocationPrecisionField;
        
        private bool geolocationPrecisionFieldSpecified;
        
        private System.Nullable<System.DateTime> timeField;
        
        private bool timeFieldSpecified;
        
        private System.Nullable<float> latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private System.Nullable<float> longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private System.Nullable<short> obtainingModeField;
        
        private bool obtainingModeFieldSpecified;
        
        private System.Nullable<short> clockingTypeIndicatorField;
        
        private bool clockingTypeIndicatorFieldSpecified;
        
        private System.Nullable<short> inOutIndicatorField;
        
        private bool inOutIndicatorFieldSpecified;
        
        private string readerDescriptionField;
        
        private string terminalDescriptionField;
        
        private string absenceTypeAbbreviationField;
        
        private string absenceTypeDescriptionField;
        
        private System.Nullable<short> geolocationStatusField;
        
        private bool geolocationStatusFieldSpecified;
        
        private System.Nullable<int> timePositionField;
        
        private bool timePositionFieldSpecified;
        
        private System.Nullable<bool> automaticField;
        
        private bool automaticFieldSpecified;
        
        private System.Nullable<int> absenceTypeKeyField;
        
        private bool absenceTypeKeyFieldSpecified;
        
        private System.Nullable<int> readerKeyField;
        
        private bool readerKeyFieldSpecified;
        
        private System.Nullable<int> clockingKeyField;
        
        private bool clockingKeyFieldSpecified;
        
        private System.Nullable<int> terminalKeyField;
        
        private bool terminalKeyFieldSpecified;
        
        private System.Nullable<int> overtimeTypeKeyField;
        
        private bool overtimeTypeKeyFieldSpecified;
        
        private string overtimeTypeDescriptionField;
        
        private string overtimeTypeAbbreviationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> geolocationPrecision {
            get {
                return this.geolocationPrecisionField;
            }
            set {
                this.geolocationPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool geolocationPrecisionSpecified {
            get {
                return this.geolocationPrecisionFieldSpecified;
            }
            set {
                this.geolocationPrecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time", IsNullable=true)]
        public System.Nullable<System.DateTime> time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeSpecified {
            get {
                return this.timeFieldSpecified;
            }
            set {
                this.timeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> obtainingMode {
            get {
                return this.obtainingModeField;
            }
            set {
                this.obtainingModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool obtainingModeSpecified {
            get {
                return this.obtainingModeFieldSpecified;
            }
            set {
                this.obtainingModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> clockingTypeIndicator {
            get {
                return this.clockingTypeIndicatorField;
            }
            set {
                this.clockingTypeIndicatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clockingTypeIndicatorSpecified {
            get {
                return this.clockingTypeIndicatorFieldSpecified;
            }
            set {
                this.clockingTypeIndicatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> inOutIndicator {
            get {
                return this.inOutIndicatorField;
            }
            set {
                this.inOutIndicatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inOutIndicatorSpecified {
            get {
                return this.inOutIndicatorFieldSpecified;
            }
            set {
                this.inOutIndicatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string readerDescription {
            get {
                return this.readerDescriptionField;
            }
            set {
                this.readerDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string terminalDescription {
            get {
                return this.terminalDescriptionField;
            }
            set {
                this.terminalDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string absenceTypeAbbreviation {
            get {
                return this.absenceTypeAbbreviationField;
            }
            set {
                this.absenceTypeAbbreviationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string absenceTypeDescription {
            get {
                return this.absenceTypeDescriptionField;
            }
            set {
                this.absenceTypeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> geolocationStatus {
            get {
                return this.geolocationStatusField;
            }
            set {
                this.geolocationStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool geolocationStatusSpecified {
            get {
                return this.geolocationStatusFieldSpecified;
            }
            set {
                this.geolocationStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> timePosition {
            get {
                return this.timePositionField;
            }
            set {
                this.timePositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timePositionSpecified {
            get {
                return this.timePositionFieldSpecified;
            }
            set {
                this.timePositionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> automatic {
            get {
                return this.automaticField;
            }
            set {
                this.automaticField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool automaticSpecified {
            get {
                return this.automaticFieldSpecified;
            }
            set {
                this.automaticFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> absenceTypeKey {
            get {
                return this.absenceTypeKeyField;
            }
            set {
                this.absenceTypeKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool absenceTypeKeySpecified {
            get {
                return this.absenceTypeKeyFieldSpecified;
            }
            set {
                this.absenceTypeKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> readerKey {
            get {
                return this.readerKeyField;
            }
            set {
                this.readerKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readerKeySpecified {
            get {
                return this.readerKeyFieldSpecified;
            }
            set {
                this.readerKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> clockingKey {
            get {
                return this.clockingKeyField;
            }
            set {
                this.clockingKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clockingKeySpecified {
            get {
                return this.clockingKeyFieldSpecified;
            }
            set {
                this.clockingKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> terminalKey {
            get {
                return this.terminalKeyField;
            }
            set {
                this.terminalKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool terminalKeySpecified {
            get {
                return this.terminalKeyFieldSpecified;
            }
            set {
                this.terminalKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> overtimeTypeKey {
            get {
                return this.overtimeTypeKeyField;
            }
            set {
                this.overtimeTypeKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overtimeTypeKeySpecified {
            get {
                return this.overtimeTypeKeyFieldSpecified;
            }
            set {
                this.overtimeTypeKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string overtimeTypeDescription {
            get {
                return this.overtimeTypeDescriptionField;
            }
            set {
                this.overtimeTypeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string overtimeTypeAbbreviation {
            get {
                return this.overtimeTypeAbbreviationField;
            }
            set {
                this.overtimeTypeAbbreviationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(askedEmployee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AskedPopulation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AskedPopulationWithPeriod))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Clocking))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://echange.service.open.bodet.com")]
    public partial class EmployeeInformation : Object {
        
        private string employeeIdentificationNumberField;
        
        private System.Nullable<bool> archivedEmployeeField;
        
        private bool archivedEmployeeFieldSpecified;
        
        private string employeeIdentificationCodeField;
        
        private string employeeBadgeCodeField;
        
        private System.Nullable<int> employeeKeyField;
        
        private bool employeeKeyFieldSpecified;
        
        private string employeeSurnameField;
        
        private string employeeFirstNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string employeeIdentificationNumber {
            get {
                return this.employeeIdentificationNumberField;
            }
            set {
                this.employeeIdentificationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> archivedEmployee {
            get {
                return this.archivedEmployeeField;
            }
            set {
                this.archivedEmployeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool archivedEmployeeSpecified {
            get {
                return this.archivedEmployeeFieldSpecified;
            }
            set {
                this.archivedEmployeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string employeeIdentificationCode {
            get {
                return this.employeeIdentificationCodeField;
            }
            set {
                this.employeeIdentificationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string employeeBadgeCode {
            get {
                return this.employeeBadgeCodeField;
            }
            set {
                this.employeeBadgeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> employeeKey {
            get {
                return this.employeeKeyField;
            }
            set {
                this.employeeKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool employeeKeySpecified {
            get {
                return this.employeeKeyFieldSpecified;
            }
            set {
                this.employeeKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string employeeSurname {
            get {
                return this.employeeSurnameField;
            }
            set {
                this.employeeSurnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string employeeFirstName {
            get {
                return this.employeeFirstNameField;
            }
            set {
                this.employeeFirstNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeInformation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(askedEmployee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AskedPopulation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AskedPopulationWithPeriod))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Clocking))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://echange.service.open.bodet.com")]
    public abstract partial class Object {
        
        private string errorMessageField;
        
        private string technicalStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string technicalString {
            get {
                return this.technicalStringField;
            }
            set {
                this.technicalStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://echange.service.open.bodet.com")]
    public partial class askedEmployee : EmployeeInformation {
        
        private System.Nullable<System.DateTime> endDateField;
        
        private bool endDateFieldSpecified;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.Nullable<int> startOffsetField;
        
        private bool startOffsetFieldSpecified;
        
        private System.Nullable<int> endOffsetField;
        
        private bool endOffsetFieldSpecified;
        
        private System.Nullable<int> dateModeField;
        
        private bool dateModeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> startOffset {
            get {
                return this.startOffsetField;
            }
            set {
                this.startOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startOffsetSpecified {
            get {
                return this.startOffsetFieldSpecified;
            }
            set {
                this.startOffsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> endOffset {
            get {
                return this.endOffsetField;
            }
            set {
                this.endOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endOffsetSpecified {
            get {
                return this.endOffsetFieldSpecified;
            }
            set {
                this.endOffsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> dateMode {
            get {
                return this.dateModeField;
            }
            set {
                this.dateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateModeSpecified {
            get {
                return this.dateModeFieldSpecified;
            }
            set {
                this.dateModeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AskedPopulationWithPeriod))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://echange.service.open.bodet.com")]
    public partial class AskedPopulation : EmployeeInformation {
        
        private System.Nullable<System.DateTime> populationStartDateField;
        
        private bool populationStartDateFieldSpecified;
        
        private System.Nullable<System.DateTime> populationEndDateField;
        
        private bool populationEndDateFieldSpecified;
        
        private string populationFilterField;
        
        private string groupFilterField;
        
        private System.Nullable<int> populationModeField;
        
        private bool populationModeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> populationStartDate {
            get {
                return this.populationStartDateField;
            }
            set {
                this.populationStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool populationStartDateSpecified {
            get {
                return this.populationStartDateFieldSpecified;
            }
            set {
                this.populationStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> populationEndDate {
            get {
                return this.populationEndDateField;
            }
            set {
                this.populationEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool populationEndDateSpecified {
            get {
                return this.populationEndDateFieldSpecified;
            }
            set {
                this.populationEndDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string populationFilter {
            get {
                return this.populationFilterField;
            }
            set {
                this.populationFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupFilter {
            get {
                return this.groupFilterField;
            }
            set {
                this.groupFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> populationMode {
            get {
                return this.populationModeField;
            }
            set {
                this.populationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool populationModeSpecified {
            get {
                return this.populationModeFieldSpecified;
            }
            set {
                this.populationModeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://echange.service.open.bodet.com")]
    public partial class AskedPopulationWithPeriod : AskedPopulation {
        
        private System.Nullable<System.DateTime> endDateField;
        
        private bool endDateFieldSpecified;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.Nullable<int> startOffsetField;
        
        private bool startOffsetFieldSpecified;
        
        private System.Nullable<int> endOffsetField;
        
        private bool endOffsetFieldSpecified;
        
        private System.Nullable<int> dateModeField;
        
        private bool dateModeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> startOffset {
            get {
                return this.startOffsetField;
            }
            set {
                this.startOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startOffsetSpecified {
            get {
                return this.startOffsetFieldSpecified;
            }
            set {
                this.startOffsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> endOffset {
            get {
                return this.endOffsetField;
            }
            set {
                this.endOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endOffsetSpecified {
            get {
                return this.endOffsetFieldSpecified;
            }
            set {
                this.endOffsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> dateMode {
            get {
                return this.dateModeField;
            }
            set {
                this.dateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateModeSpecified {
            get {
                return this.dateModeFieldSpecified;
            }
            set {
                this.dateModeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void deletePhysicalClockingsCompletedEventHandler(object sender, deletePhysicalClockingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePhysicalClockingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePhysicalClockingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void exportCalculatedClockingsOnlyCompletedEventHandler(object sender, exportCalculatedClockingsOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportCalculatedClockingsOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportCalculatedClockingsOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void importClockingsCompletedEventHandler(object sender, importClockingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importClockingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importClockingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void exportClockingsCompletedEventHandler(object sender, exportClockingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportClockingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportClockingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void exportClockingsByDateForEmployeeListCompletedEventHandler(object sender, exportClockingsByDateForEmployeeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportClockingsByDateForEmployeeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportClockingsByDateForEmployeeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void exportClockingsByDateCompletedEventHandler(object sender, exportClockingsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportClockingsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportClockingsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void importPhysicalClockingsCompletedEventHandler(object sender, importPhysicalClockingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importPhysicalClockingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importPhysicalClockingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clocking[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clocking[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591